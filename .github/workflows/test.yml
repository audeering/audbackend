name: Test

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macOS-latest ]
        python-version: [ '3.10' ]
        include:
          - os: ubuntu-latest
            python-version: '3.8'
          - os: ubuntu-latest
            python-version: '3.9'
          - os: ubuntu-latest
            python-version: '3.11'
          - os: ubuntu-latest
            python-version: '3.10'
            fs: minio

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Update pip
      run: |
        python -V
        python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install -r tests/requirements.txt

    - name: Default file system
      run: |
        echo "AUDBACKEND_TEST_FS='dir'" >> $GITHUB_ENV

    - name: Use minio file system
      run: |
        ping -c1 -W1 play.minio.io >/dev/null && FS="minio" || FS="none"
        echo "AUDBACKEND_TEST_FS=${FS}" >> $GITHUB_ENV
      if: matrix.fs == 'minio'

    - name: Test with pytest
      env:
        ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
        ARTIFACTORY_API_KEY: ${{ secrets.ARTIFACTORY_API_KEY }}
      run: |
        export AUDBACKEND_TEST_FS=${{ env.AUDBACKEND_TEST_FS }}
        python -m pytest --cov-config=.coveragerc.${{ runner.os }}
      if: ${{ env.AUDBACKEND_TEST_FS != 'none' }}

    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
      if: ${{ (matrix.os == 'ubuntu-latest') && (env.AUDBACKEND_TEST_FS != 'none') }}
